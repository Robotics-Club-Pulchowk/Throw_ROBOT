ARM GAS  /tmp/cc2ClOrO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"time.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZN3ros16normalizeSecNSecERmS0_,"ax",%progbits
  18              		.align	1
  19              		.global	_ZN3ros16normalizeSecNSecERmS0_
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_ZN3ros16normalizeSecNSecERmS0_:
  27              	.LVL0:
  28              	.LFB241:
  29              		.file 1 "Core/Src/time.cpp"
   1:Core/Src/time.cpp **** /*
   2:Core/Src/time.cpp ****  * Software License Agreement (BSD License)
   3:Core/Src/time.cpp ****  *
   4:Core/Src/time.cpp ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:Core/Src/time.cpp ****  * All rights reserved.
   6:Core/Src/time.cpp ****  *
   7:Core/Src/time.cpp ****  * Redistribution and use in source and binary forms, with or without
   8:Core/Src/time.cpp ****  * modification, are permitted provided that the following conditions
   9:Core/Src/time.cpp ****  * are met:
  10:Core/Src/time.cpp ****  *
  11:Core/Src/time.cpp ****  *  * Redistributions of source code must retain the above copyright
  12:Core/Src/time.cpp ****  *    notice, this list of conditions and the following disclaimer.
  13:Core/Src/time.cpp ****  *  * Redistributions in binary form must reproduce the above
  14:Core/Src/time.cpp ****  *    copyright notice, this list of conditions and the following
  15:Core/Src/time.cpp ****  *    disclaimer in the documentation and/or other materials provided
  16:Core/Src/time.cpp ****  *    with the distribution.
  17:Core/Src/time.cpp ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:Core/Src/time.cpp ****  *    contributors may be used to endorse or promote prducts derived
  19:Core/Src/time.cpp ****  *    from this software without specific prior written permission.
  20:Core/Src/time.cpp ****  *
  21:Core/Src/time.cpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:Core/Src/time.cpp ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:Core/Src/time.cpp ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:Core/Src/time.cpp ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:Core/Src/time.cpp ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:Core/Src/time.cpp ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:Core/Src/time.cpp ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:Core/Src/time.cpp ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Core/Src/time.cpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
ARM GAS  /tmp/cc2ClOrO.s 			page 2


  30:Core/Src/time.cpp ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:Core/Src/time.cpp ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:Core/Src/time.cpp ****  * POSSIBILITY OF SUCH DAMAGE.
  33:Core/Src/time.cpp ****  */
  34:Core/Src/time.cpp **** 
  35:Core/Src/time.cpp **** #include "ros/time.h"
  36:Core/Src/time.cpp **** 
  37:Core/Src/time.cpp **** namespace ros
  38:Core/Src/time.cpp **** {
  39:Core/Src/time.cpp **** void normalizeSecNSec(uint32_t& sec, uint32_t& nsec)
  40:Core/Src/time.cpp **** {
  30              		.loc 1 40 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 40 1 is_stmt 0 view .LVU1
  36 0000 30B4     		push	{r4, r5}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 5, -4
  41:Core/Src/time.cpp ****   uint32_t nsec_part = nsec % 1000000000UL;
  41              		.loc 1 41 3 is_stmt 1 view .LVU2
  42              		.loc 1 41 24 is_stmt 0 view .LVU3
  43 0002 0C68     		ldr	r4, [r1]
  44              		.loc 1 41 12 view .LVU4
  45 0004 630A     		lsrs	r3, r4, #9
  46 0006 074A     		ldr	r2, .L3
  47 0008 A2FB0323 		umull	r2, r3, r2, r3
  48 000c DA09     		lsrs	r2, r3, #7
  49 000e 064D     		ldr	r5, .L3+4
  50 0010 05FB1242 		mls	r2, r5, r2, r4
  51              	.LVL1:
  42:Core/Src/time.cpp ****   uint32_t sec_part = nsec / 1000000000UL;
  52              		.loc 1 42 3 is_stmt 1 view .LVU5
  43:Core/Src/time.cpp ****   sec += sec_part;
  53              		.loc 1 43 3 view .LVU6
  54              		.loc 1 43 7 is_stmt 0 view .LVU7
  55 0014 0468     		ldr	r4, [r0]
  56 0016 04EBD313 		add	r3, r4, r3, lsr #7
  57              	.LVL2:
  58              		.loc 1 43 7 view .LVU8
  59 001a 0360     		str	r3, [r0]
  60              	.LVL3:
  44:Core/Src/time.cpp ****   nsec = nsec_part;
  61              		.loc 1 44 3 is_stmt 1 view .LVU9
  62              		.loc 1 44 8 is_stmt 0 view .LVU10
  63 001c 0A60     		str	r2, [r1]
  45:Core/Src/time.cpp **** }
  64              		.loc 1 45 1 view .LVU11
  65 001e 30BC     		pop	{r4, r5}
  66              	.LCFI1:
  67              		.cfi_restore 5
  68              		.cfi_restore 4
  69              		.cfi_def_cfa_offset 0
  70 0020 7047     		bx	lr
ARM GAS  /tmp/cc2ClOrO.s 			page 3


  71              	.L4:
  72 0022 00BF     		.align	2
  73              	.L3:
  74 0024 834B0400 		.word	281475
  75 0028 00CA9A3B 		.word	1000000000
  76              		.cfi_endproc
  77              	.LFE241:
  79              		.section	.text._ZN3ros4Time8fromNSecEl,"ax",%progbits
  80              		.align	1
  81              		.global	_ZN3ros4Time8fromNSecEl
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	_ZN3ros4Time8fromNSecEl:
  88              	.LVL4:
  89              	.LFB242:
  46:Core/Src/time.cpp **** 
  47:Core/Src/time.cpp **** Time& Time::fromNSec(int32_t t)
  48:Core/Src/time.cpp **** {
  90              		.loc 1 48 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		.loc 1 48 1 is_stmt 0 view .LVU13
  95 0000 10B5     		push	{r4, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100 0002 0446     		mov	r4, r0
  49:Core/Src/time.cpp ****   sec = t / 1000000000;
 101              		.loc 1 49 3 is_stmt 1 view .LVU14
 102              		.loc 1 49 11 is_stmt 0 view .LVU15
 103 0004 084A     		ldr	r2, .L7
 104 0006 82FB0132 		smull	r3, r2, r2, r1
 105 000a CB17     		asrs	r3, r1, #31
 106 000c C3EB2273 		rsb	r3, r3, r2, asr #28
 107              		.loc 1 49 7 view .LVU16
 108 0010 0360     		str	r3, [r0]
  50:Core/Src/time.cpp ****   nsec = t % 1000000000;
 109              		.loc 1 50 3 is_stmt 1 view .LVU17
 110              		.loc 1 50 12 is_stmt 0 view .LVU18
 111 0012 064A     		ldr	r2, .L7+4
 112 0014 02FB1313 		mls	r3, r2, r3, r1
 113              		.loc 1 50 8 view .LVU19
 114 0018 0146     		mov	r1, r0
 115              	.LVL5:
 116              		.loc 1 50 8 view .LVU20
 117 001a 41F8043F 		str	r3, [r1, #4]!
  51:Core/Src/time.cpp ****   normalizeSecNSec(sec, nsec);
 118              		.loc 1 51 3 is_stmt 1 view .LVU21
 119              		.loc 1 51 19 is_stmt 0 view .LVU22
 120 001e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 121              	.LVL6:
  52:Core/Src/time.cpp ****   return *this;
 122              		.loc 1 52 3 is_stmt 1 view .LVU23
ARM GAS  /tmp/cc2ClOrO.s 			page 4


  53:Core/Src/time.cpp **** }
 123              		.loc 1 53 1 is_stmt 0 view .LVU24
 124 0022 2046     		mov	r0, r4
 125 0024 10BD     		pop	{r4, pc}
 126              	.LVL7:
 127              	.L8:
 128              		.loc 1 53 1 view .LVU25
 129 0026 00BF     		.align	2
 130              	.L7:
 131 0028 A12FB844 		.word	1152921505
 132 002c 00CA9A3B 		.word	1000000000
 133              		.cfi_endproc
 134              	.LFE242:
 136              		.section	.text._ZN3ros4TimepLERKNS_8DurationE,"ax",%progbits
 137              		.align	1
 138              		.global	_ZN3ros4TimepLERKNS_8DurationE
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	_ZN3ros4TimepLERKNS_8DurationE:
 145              	.LVL8:
 146              	.LFB243:
  54:Core/Src/time.cpp **** 
  55:Core/Src/time.cpp **** Time& Time::operator +=(const Duration &rhs)
  56:Core/Src/time.cpp **** {
 147              		.loc 1 56 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 56 1 is_stmt 0 view .LVU27
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 0446     		mov	r4, r0
  57:Core/Src/time.cpp ****   sec = sec - 1 + rhs.sec;
 158              		.loc 1 57 3 is_stmt 1 view .LVU28
 159              		.loc 1 57 9 is_stmt 0 view .LVU29
 160 0004 0268     		ldr	r2, [r0]
 161              		.loc 1 57 23 view .LVU30
 162 0006 0B68     		ldr	r3, [r1]
 163              		.loc 1 57 17 view .LVU31
 164 0008 1344     		add	r3, r3, r2
 165 000a 013B     		subs	r3, r3, #1
 166              		.loc 1 57 7 view .LVU32
 167 000c 0360     		str	r3, [r0]
  58:Core/Src/time.cpp ****   nsec = nsec + 1000000000UL + rhs.nsec;
 168              		.loc 1 58 3 is_stmt 1 view .LVU33
 169              		.loc 1 58 10 is_stmt 0 view .LVU34
 170 000e 4368     		ldr	r3, [r0, #4]
 171              		.loc 1 58 36 view .LVU35
 172 0010 4A68     		ldr	r2, [r1, #4]
 173              		.loc 1 58 30 view .LVU36
 174 0012 1A44     		add	r2, r2, r3
 175 0014 044B     		ldr	r3, .L11
ARM GAS  /tmp/cc2ClOrO.s 			page 5


 176 0016 1344     		add	r3, r3, r2
 177              		.loc 1 58 8 view .LVU37
 178 0018 0146     		mov	r1, r0
 179              	.LVL9:
 180              		.loc 1 58 8 view .LVU38
 181 001a 41F8043F 		str	r3, [r1, #4]!
  59:Core/Src/time.cpp ****   normalizeSecNSec(sec, nsec);
 182              		.loc 1 59 3 is_stmt 1 view .LVU39
 183              		.loc 1 59 19 is_stmt 0 view .LVU40
 184 001e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 185              	.LVL10:
  60:Core/Src/time.cpp ****   return *this;
 186              		.loc 1 60 3 is_stmt 1 view .LVU41
  61:Core/Src/time.cpp **** }
 187              		.loc 1 61 1 is_stmt 0 view .LVU42
 188 0022 2046     		mov	r0, r4
 189 0024 10BD     		pop	{r4, pc}
 190              	.LVL11:
 191              	.L12:
 192              		.loc 1 61 1 view .LVU43
 193 0026 00BF     		.align	2
 194              	.L11:
 195 0028 00CA9A3B 		.word	1000000000
 196              		.cfi_endproc
 197              	.LFE243:
 199              		.section	.text._ZN3ros4TimemIERKNS_8DurationE,"ax",%progbits
 200              		.align	1
 201              		.global	_ZN3ros4TimemIERKNS_8DurationE
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	_ZN3ros4TimemIERKNS_8DurationE:
 208              	.LVL12:
 209              	.LFB244:
  62:Core/Src/time.cpp **** 
  63:Core/Src/time.cpp **** Time& Time::operator -=(const Duration &rhs){
 210              		.loc 1 63 45 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		.loc 1 63 45 is_stmt 0 view .LVU45
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 220 0002 0446     		mov	r4, r0
  64:Core/Src/time.cpp ****   sec = sec - 1 - rhs.sec;
 221              		.loc 1 64 3 is_stmt 1 view .LVU46
 222              		.loc 1 64 9 is_stmt 0 view .LVU47
 223 0004 0368     		ldr	r3, [r0]
 224              		.loc 1 64 23 view .LVU48
 225 0006 0A68     		ldr	r2, [r1]
 226              		.loc 1 64 17 view .LVU49
 227 0008 9B1A     		subs	r3, r3, r2
 228 000a 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc2ClOrO.s 			page 6


 229              		.loc 1 64 7 view .LVU50
 230 000c 0360     		str	r3, [r0]
  65:Core/Src/time.cpp ****   nsec = nsec + 1000000000UL - rhs.nsec;
 231              		.loc 1 65 3 is_stmt 1 view .LVU51
 232              		.loc 1 65 10 is_stmt 0 view .LVU52
 233 000e 4368     		ldr	r3, [r0, #4]
 234              		.loc 1 65 36 view .LVU53
 235 0010 4A68     		ldr	r2, [r1, #4]
 236              		.loc 1 65 30 view .LVU54
 237 0012 9A1A     		subs	r2, r3, r2
 238 0014 044B     		ldr	r3, .L15
 239 0016 1344     		add	r3, r3, r2
 240              		.loc 1 65 8 view .LVU55
 241 0018 0146     		mov	r1, r0
 242              	.LVL13:
 243              		.loc 1 65 8 view .LVU56
 244 001a 41F8043F 		str	r3, [r1, #4]!
  66:Core/Src/time.cpp ****   normalizeSecNSec(sec, nsec);
 245              		.loc 1 66 3 is_stmt 1 view .LVU57
 246              		.loc 1 66 19 is_stmt 0 view .LVU58
 247 001e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 248              	.LVL14:
  67:Core/Src/time.cpp ****   return *this;
 249              		.loc 1 67 3 is_stmt 1 view .LVU59
  68:Core/Src/time.cpp **** }
 250              		.loc 1 68 1 is_stmt 0 view .LVU60
 251 0022 2046     		mov	r0, r4
 252 0024 10BD     		pop	{r4, pc}
 253              	.LVL15:
 254              	.L16:
 255              		.loc 1 68 1 view .LVU61
 256 0026 00BF     		.align	2
 257              	.L15:
 258 0028 00CA9A3B 		.word	1000000000
 259              		.cfi_endproc
 260              	.LFE244:
 262              		.section	.text._ZNK3ros4TimemiERKS0_,"ax",%progbits
 263              		.align	1
 264              		.global	_ZNK3ros4TimemiERKS0_
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	_ZNK3ros4TimemiERKS0_:
 271              	.LVL16:
 272              	.LFB245:
  69:Core/Src/time.cpp **** 
  70:Core/Src/time.cpp **** Duration Time::operator-(const Time &rhs) const {
 273              		.loc 1 70 49 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		.loc 1 70 49 is_stmt 0 view .LVU63
 278 0000 38B5     		push	{r3, r4, r5, lr}
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 16
 281              		.cfi_offset 3, -16
ARM GAS  /tmp/cc2ClOrO.s 			page 7


 282              		.cfi_offset 4, -12
 283              		.cfi_offset 5, -8
 284              		.cfi_offset 14, -4
 285 0002 0446     		mov	r4, r0
  71:Core/Src/time.cpp ****   // Note: Considers wrap around as a continuation of time, e.g.,
  72:Core/Src/time.cpp ****   // (0,0) - (0xFFFFFFFF, 0) = (1, 0)
  73:Core/Src/time.cpp ****   Duration d;
 286              		.loc 1 73 3 is_stmt 1 view .LVU64
 287              	.LVL17:
 288              	.LBB5:
 289              	.LBI5:
 290              		.file 2 "Core/Inc/ros/ros/duration.h"
   1:Core/Inc/ros/ros/duration.h **** /*
   2:Core/Inc/ros/ros/duration.h ****  * Software License Agreement (BSD License)
   3:Core/Inc/ros/ros/duration.h ****  *
   4:Core/Inc/ros/ros/duration.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:Core/Inc/ros/ros/duration.h ****  * All rights reserved.
   6:Core/Inc/ros/ros/duration.h ****  *
   7:Core/Inc/ros/ros/duration.h ****  * Redistribution and use in source and binary forms, with or without
   8:Core/Inc/ros/ros/duration.h ****  * modification, are permitted provided that the following conditions
   9:Core/Inc/ros/ros/duration.h ****  * are met:
  10:Core/Inc/ros/ros/duration.h ****  *
  11:Core/Inc/ros/ros/duration.h ****  *  * Redistributions of source code must retain the above copyright
  12:Core/Inc/ros/ros/duration.h ****  *    notice, this list of conditions and the following disclaimer.
  13:Core/Inc/ros/ros/duration.h ****  *  * Redistributions in binary form must reproduce the above
  14:Core/Inc/ros/ros/duration.h ****  *    copyright notice, this list of conditions and the following
  15:Core/Inc/ros/ros/duration.h ****  *    disclaimer in the documentation and/or other materials provided
  16:Core/Inc/ros/ros/duration.h ****  *    with the distribution.
  17:Core/Inc/ros/ros/duration.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:Core/Inc/ros/ros/duration.h ****  *    contributors may be used to endorse or promote prducts derived
  19:Core/Inc/ros/ros/duration.h ****  *    from this software without specific prior written permission.
  20:Core/Inc/ros/ros/duration.h ****  *
  21:Core/Inc/ros/ros/duration.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:Core/Inc/ros/ros/duration.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:Core/Inc/ros/ros/duration.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:Core/Inc/ros/ros/duration.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:Core/Inc/ros/ros/duration.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:Core/Inc/ros/ros/duration.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:Core/Inc/ros/ros/duration.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:Core/Inc/ros/ros/duration.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Core/Inc/ros/ros/duration.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:Core/Inc/ros/ros/duration.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:Core/Inc/ros/ros/duration.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:Core/Inc/ros/ros/duration.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:Core/Inc/ros/ros/duration.h ****  */
  34:Core/Inc/ros/ros/duration.h **** 
  35:Core/Inc/ros/ros/duration.h **** #ifndef _ROS_DURATION_H_
  36:Core/Inc/ros/ros/duration.h **** #define _ROS_DURATION_H_
  37:Core/Inc/ros/ros/duration.h **** 
  38:Core/Inc/ros/ros/duration.h **** #include <math.h>
  39:Core/Inc/ros/ros/duration.h **** #include <stdint.h>
  40:Core/Inc/ros/ros/duration.h **** 
  41:Core/Inc/ros/ros/duration.h **** namespace ros
  42:Core/Inc/ros/ros/duration.h **** {
  43:Core/Inc/ros/ros/duration.h **** 
  44:Core/Inc/ros/ros/duration.h **** void normalizeSecNSecSigned(int32_t& sec, int32_t& nsec);
  45:Core/Inc/ros/ros/duration.h **** 
ARM GAS  /tmp/cc2ClOrO.s 			page 8


  46:Core/Inc/ros/ros/duration.h **** class Duration
  47:Core/Inc/ros/ros/duration.h **** {
  48:Core/Inc/ros/ros/duration.h **** public:
  49:Core/Inc/ros/ros/duration.h ****   int32_t sec, nsec;
  50:Core/Inc/ros/ros/duration.h **** 
  51:Core/Inc/ros/ros/duration.h ****   Duration() : sec(0), nsec(0) {}
 291              		.loc 2 51 3 view .LVU65
 292              	.LBB6:
 293              	.LBB7:
 294              		.loc 2 51 30 is_stmt 0 view .LVU66
 295 0004 0023     		movs	r3, #0
 296 0006 0360     		str	r3, [r0]
 297 0008 4360     		str	r3, [r0, #4]
 298              	.LVL18:
 299              		.loc 2 51 30 view .LVU67
 300              	.LBE7:
 301              	.LBE6:
 302              	.LBE5:
  74:Core/Src/time.cpp ****   d.sec = sec > rhs.sec ? sec - rhs.sec : -(rhs.sec - sec);
 303              		.loc 1 74 3 is_stmt 1 view .LVU68
 304              		.loc 1 74 27 is_stmt 0 view .LVU69
 305 000a 0B68     		ldr	r3, [r1]
 306              		.loc 1 74 31 view .LVU70
 307 000c 1568     		ldr	r5, [r2]
 308 000e 5B1B     		subs	r3, r3, r5
 309              		.loc 1 74 9 view .LVU71
 310 0010 0360     		str	r3, [r0]
  75:Core/Src/time.cpp ****   d.nsec = nsec > rhs.nsec ? nsec - rhs.nsec : -(rhs.nsec - nsec);
 311              		.loc 1 75 3 is_stmt 1 view .LVU72
 312              		.loc 1 75 30 is_stmt 0 view .LVU73
 313 0012 4B68     		ldr	r3, [r1, #4]
 314              		.loc 1 75 41 view .LVU74
 315 0014 5268     		ldr	r2, [r2, #4]
 316              	.LVL19:
 317              		.loc 1 75 35 view .LVU75
 318 0016 9B1A     		subs	r3, r3, r2
 319              		.loc 1 75 10 view .LVU76
 320 0018 0146     		mov	r1, r0
 321              	.LVL20:
 322              		.loc 1 75 10 view .LVU77
 323 001a 41F8043F 		str	r3, [r1, #4]!
  76:Core/Src/time.cpp ****   normalizeSecNSecSigned(d.sec, d.nsec);
 324              		.loc 1 76 3 is_stmt 1 view .LVU78
 325              		.loc 1 76 25 is_stmt 0 view .LVU79
 326 001e FFF7FEFF 		bl	_ZN3ros22normalizeSecNSecSignedERlS0_
 327              	.LVL21:
  77:Core/Src/time.cpp ****   return d;
 328              		.loc 1 77 3 is_stmt 1 view .LVU80
  78:Core/Src/time.cpp **** }
 329              		.loc 1 78 1 is_stmt 0 view .LVU81
 330 0022 2046     		mov	r0, r4
 331 0024 38BD     		pop	{r3, r4, r5, pc}
 332              		.loc 1 78 1 view .LVU82
 333              		.cfi_endproc
 334              	.LFE245:
 336              		.text
 337              	.Letext0:
ARM GAS  /tmp/cc2ClOrO.s 			page 9


 338              		.file 3 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/
 339              		.file 4 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/
 340              		.file 5 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/
 341              		.file 6 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_de
 342              		.file 7 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 343              		.file 8 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/
 344              		.file 9 "/home/love/Documents/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint
 345              		.file 10 "Core/Inc/ros/ros/time.h"
 346              		.file 11 "<built-in>"
ARM GAS  /tmp/cc2ClOrO.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 time.cpp
     /tmp/cc2ClOrO.s:18     .text._ZN3ros16normalizeSecNSecERmS0_:0000000000000000 $t
     /tmp/cc2ClOrO.s:26     .text._ZN3ros16normalizeSecNSecERmS0_:0000000000000000 _ZN3ros16normalizeSecNSecERmS0_
     /tmp/cc2ClOrO.s:74     .text._ZN3ros16normalizeSecNSecERmS0_:0000000000000024 $d
     /tmp/cc2ClOrO.s:80     .text._ZN3ros4Time8fromNSecEl:0000000000000000 $t
     /tmp/cc2ClOrO.s:87     .text._ZN3ros4Time8fromNSecEl:0000000000000000 _ZN3ros4Time8fromNSecEl
     /tmp/cc2ClOrO.s:131    .text._ZN3ros4Time8fromNSecEl:0000000000000028 $d
     /tmp/cc2ClOrO.s:137    .text._ZN3ros4TimepLERKNS_8DurationE:0000000000000000 $t
     /tmp/cc2ClOrO.s:144    .text._ZN3ros4TimepLERKNS_8DurationE:0000000000000000 _ZN3ros4TimepLERKNS_8DurationE
     /tmp/cc2ClOrO.s:195    .text._ZN3ros4TimepLERKNS_8DurationE:0000000000000028 $d
     /tmp/cc2ClOrO.s:200    .text._ZN3ros4TimemIERKNS_8DurationE:0000000000000000 $t
     /tmp/cc2ClOrO.s:207    .text._ZN3ros4TimemIERKNS_8DurationE:0000000000000000 _ZN3ros4TimemIERKNS_8DurationE
     /tmp/cc2ClOrO.s:258    .text._ZN3ros4TimemIERKNS_8DurationE:0000000000000028 $d
     /tmp/cc2ClOrO.s:263    .text._ZNK3ros4TimemiERKS0_:0000000000000000 $t
     /tmp/cc2ClOrO.s:270    .text._ZNK3ros4TimemiERKS0_:0000000000000000 _ZNK3ros4TimemiERKS0_

UNDEFINED SYMBOLS
_ZN3ros22normalizeSecNSecSignedERlS0_
